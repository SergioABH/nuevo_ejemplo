name: Versioning

on:
  pull_request:
    branches:
      - 'feat/*'
    types:
      - closed
  push:
    branches:
      - 'feat/*'
    paths-ignore:
      - '!'

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Determine Version
        id: determine_version
        run: |
          if [[ $GITHUB_EVENT_NAME == 'pull_request' && ${{ github.event_name }} == 'pull_request' && ${{ github.event.action }} == 'closed' && ${{ github.event.pull_request.merged }} == 'true' ]]; then
            base_branch=$(jq -r .pull_request.base.ref $GITHUB_EVENT_PATH)
            branch_name=$(jq -r .pull_request.head.ref $GITHUB_EVENT_PATH)

            if [[ $base_branch == 'develop' ]]; then
              if [[ $branch_name == *feat/* ]]; then
                npm --no-git-tag-version version preminor
              elif [[ $branch_name == *fix/* ]]; then
                npm --no-git-tag-version version prepatch
              fi

            elif [[ $base_branch == 'qa' ]]; then
              if [[ $branch_name == 'develop' ]]; then
                npm --no-git-tag-version version minor
              elif [[ $branch_name == *fix/* ]]; then
                npm --no-git-tag-version version patch
              fi
            
            elif [[ $base_branch == *prerelease/* ]]; then
              if [[ $branch_name == 'qa' ]]; then
                npm --no-git-tag-version version prerelease --preid=rc
              fi

            elif [[ $base_branch == 'main' ]]; then
              if [[ $branch_name == *hotfix/* ]]; then
                npm --no-git-tag-version version patch
              elif [[ $branch_name == *prerelease/* ]]; then
                npm --no-git-tag-version version major
              fi
            fi
            echo $version > version.txt
          fi
          
          echo "::set-output name=base_branch::$base_branch"
          echo "::set-output name=branch_name::$branch_name"

      - name: Get New Version
        id: get_version
        run: echo "::set-output name=version::$(cat version.txt)"

      - name: Commit and Push Version Update
        run: |
          base_branch=${{ steps.determine_version.outputs.base_branch }}
          branch_name=${{ steps.determine_version.outputs.branch_name }}
          version=${{ steps.get_version.outputs.version }}

          echo "Base branch: $base_branch"
          echo "Branch name: $branch_name"
          echo "Version: $version"
          
          git fetch origin $base_branch:$base_branch || true
          git checkout $base_branch || true

          git add .
          git commit -am "Update version" || true
          git checkout $base_branch
          git push origin $base_branch --follow-tags || true        
        shell: bash
      
      - name: Release on Push
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feat/')
        run: |
          version=$(cat version.txt)
          npm --no-git-tag-version version prerelease --preid=0
          git add .
          git commit -am "Prerelease version for branch $GITHUB_REF" || true
          git push origin $GITHUB_REF --follow-tags || true
        shell: bash

      - name: Merge to Develop
        if: github.event_name == 'pull_request' && ${{ github.event.action }} == 'closed' && ${{ github.event.pull_request.merged }} == 'true' && ${{ steps.determine_version.outputs.base_branch }} == 'develop'
        run: npm version minor && git add . && git commit -m "Version bump to $version" && git push origin develop --follow-tags
        shell: bash
