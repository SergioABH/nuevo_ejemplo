name: Versioning

on:
  pull_request:
    branches:
      - main
      - qa
      - develop
      - hotfix/*
      - prerelease/*

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Determine Version
        run: |
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
            base_branch=$(jq -r .pull_request.base.ref $GITHUB_EVENT_PATH)
            branch_name=$(jq -r .pull_request.head.ref $GITHUB_EVENT_PATH)

            if [[ $base_branch == 'develop' ]]; then
              if [[ $branch_name == 'qa' ]]; then
                npm version minor
              elif [[ $branch_name == 'main' ]]; then
                npm version patch
              elif [[ $branch_name == *feat/* ]]; then
                npm --no-git-tag-version version preminor
              elif [[ $branch_name == *fix/* ]]; then
                npm --no-git-tag-version version prepatch
              elif [[ $branch_name == hotfix/* ]]; then
                npm --no-git-tag-version version patch
              elif [[ $branch_name == prerelease/* ]]; then
                npm --no-git-tag-version version prerelease --preid=rc
              fi
            fi
          fi

          echo "Base branch: $base_branch"
          echo "Branch name: $branch_name"

      - name: Get New Version
        id: get_version
        run: echo "::set-output name=version::$(npm --no-git-tag-version version)"

      - name: Configure Git Identity
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Checkout the Base Branch
        run: |
          git fetch origin $base_branch:$base_branch || true
          git checkout $base_branch || true
        shell: bash

      - name: Check for errors in the base branch
        run: |
          git status
          if [[ ! -f "package.json" ]]; then
            echo "Error: No changes in package.json!"
            exit 1
          fi

      - name: Commit and Push Version Update
        run: |
          git add .
          git commit -am "Update version: $version" || true
          git checkout $base_branch
          git push origin $base_branch --follow-tags || true
        shell: bash
