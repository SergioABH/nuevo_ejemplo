name: Versioning

on:
  pull_request:
    branches:
      - main
      - qa
      - develop
      - hotfix/*
      - prerelease/*

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14'

    - name: Install Dependencies
      run: npm install

    - name: Determine Version
      run: |
        if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
          base_branch=$(jq -r .pull_request.base.ref $GITHUB_EVENT_PATH)
          branch_name=$(jq -r .pull_request.head.ref $GITHUB_EVENT_PATH)
          
          if [[ $base_branch == 'develop' ]]; then
            if [[ $branch_name == 'qa' ]]; then
              npm version minor
            elif [[ $branch_name == 'main' ]]; then
              npm version patch
            elif [[ $branch_name == *feat/* ]]; then
              npm --no-git-tag-version version preminor
            elif [[ $branch_name == *fix/* ]]; then
              npm --no-git-tag-version version prepatch
            elif [[ $branch_name == hotfix/* ]]; then
              npm --no-git-tag-version version patch
            elif [[ $branch_name == prerelease/* ]]; then
              npm --no-git-tag-version version prerelease --preid=rc
            fi
          fi
        fi

    - name: Get New Version
      id: get_version
      run: echo "::set-output name=version::$(npm --no-git-tag-version version)"

    - name: Commit and Push Version Update
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        
        # Crear una nueva rama temporal
        git branch temp_branch
        
        # Cambiar a la nueva rama temporal
        git checkout temp_branch
        
        # Realizar el commit
        git commit -am "Update version" || true
        
        # Empujar la nueva rama temporal
        git push --set-upstream origin temp_branch --follow-tags
        
        # Volver a la rama base
        git checkout $base_branch
        
        # Fusionar la rama temporal en la base (o rebase, seg√∫n tus preferencias)
        git merge temp_branch
        
        # Empujar los cambios en la rama base
        git push origin $base_branch --follow-tags

        # Eliminar la rama temporal local
        git branch -d temp_branch || true
